@model SeatSelectionViewModel

@{
    ViewData["Title"] = "Chọn Ghế";
    var rows = Model.Seats.Select(s => s.Row).Distinct();
}

<div class="container py-4">
    <div class="row">
        <!-- Sơ đồ chọn ghế -->
        <div class="col-lg-8">
            <!-- Đổi suất chiếu -->
            <div class="mb-3 d-flex flex-wrap gap-2">
                <button class="btn btn-outline-primary active">18:30</button>
                <button class="btn btn-outline-primary">19:30</button>
            </div>

            <!-- Sơ đồ ghế -->
            <div class="bg-light p-3 rounded shadow-sm">
                <div class="text-center mb-3 text-muted">Màn hình</div>

                <div class="d-flex flex-column align-items-center">
                    @foreach (var row in rows)
                    {
                        var rowSeats = Model.Seats.Where(s => s.Row == row).ToList();
                        <div class="d-flex mb-2 align-items-center">
                            <div class="me-2 fw-bold">@row</div>
                            <div class="d-flex flex-wrap gap-1">
                                @foreach (var seat in rowSeats)
                                {
                                    var classes = "btn btn-sm seat-btn ";
                                    if (seat.IsSold)
                                    {
                                        classes += "btn-secondary disabled";
                                    }
                                    else if (seat.IsVip)
                                    {
                                        classes += "btn-outline-warning";
                                    }
                                    else if (seat.IsCouple)
                                    {
                                        classes += "btn-outline-primary";
                                    }
                                    else if (seat.IsTriple)
                                    {
                                        classes += "btn-outline-danger";
                                    }
                                    else
                                    {
                                        classes += "btn-outline-secondary";
                                    }

                                    <button class="@classes" data-row="@seat.Row" data-number="@seat.Number">@seat.Number</button>
                                }
                            </div>
                            <div class="ms-2 fw-bold">@row</div>
                        </div>
                    }
                </div>

                <!-- Ghi chú -->
                <div class="mt-4">
                    <div class="d-flex flex-wrap gap-3">
                        <div><span class="btn btn-secondary btn-sm disabled"></span> Ghế đã bán</div>
                        <div><span class="btn btn-warning btn-sm"></span> Ghế đang chọn</div>
                        <div><span class="btn btn-outline-warning btn-sm"></span> Ghế VIP</div>
                        <div><span class="btn btn-outline-secondary btn-sm"></span> Ghế đơn</div>
                        <div><span class="btn btn-outline-primary btn-sm"></span> Ghế đôi</div>
                        <div><span class="btn btn-outline-danger btn-sm"></span> Ghế ba</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Thông tin phim -->
        <div class="col-lg-4 mt-4 mt-lg-0">
            <div class="border p-3 rounded shadow-sm">
                <div class="d-flex align-items-start">
                   
                    <img src="@Model.PosterUrl" alt="Poster" class="me-3 rounded" style="width: 100px;">
                    <div>
                        <h6 class="fw-bold mb-1">@Model.MovieTitle</h6>
                        <div class="text-muted small">@Model.Format</div>
                    </div>
                </div>

                <hr>
                <div>
                    <p class="mb-1"><strong>@Model.CinemaName</strong> - @Model.RoomName</p>
                    <p class="mb-1">
                        Suất: <strong>@Model.ShowTime.ToString("HH:mm")</strong> - @Model.ShowTime.ToString("dddd, dd/MM/yyyy")
                    </p>
                    <p class="mb-1">Tổng cộng: <strong class="text-danger" id="total-price">0 đ</strong></p>
                </div>

                <div class="d-flex justify-content-between mt-3">
                    <a href="#" class="btn btn-outline-secondary">Quay lại</a>
                    <button class="btn btn-warning">Tiếp tục</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const selectedSeats = new Set();
            const seatButtons = document.querySelectorAll(".seat-btn:not(.disabled)");
            const totalPriceEl = document.getElementById("total-price");
            const seatPrice = 75000; // ví dụ đơn giá

            seatButtons.forEach(btn => {
                btn.addEventListener("click", function () {
                    const key = btn.dataset.row + btn.dataset.number;
                    if (selectedSeats.has(key)) {
                        selectedSeats.delete(key);
                        btn.classList.remove("btn-warning");
                    } else {
                        selectedSeats.add(key);
                        btn.classList.add("btn-warning");
                    }

                    totalPriceEl.textContent = (selectedSeats.size * seatPrice).toLocaleString('vi-VN') + " đ";
                });
            });
        });
    </script>
}
